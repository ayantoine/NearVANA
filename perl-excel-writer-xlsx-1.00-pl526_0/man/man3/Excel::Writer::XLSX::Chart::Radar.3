.\" Automatically generated by Pod::Man 4.09 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.if !\nF .nr F 0
.if \nF>0 \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    if !\nF==2 \{\
.        nr % 0
.        nr F 2
.    \}
.\}
.\" ========================================================================
.\"
.IX Title "Excel::Writer::XLSX::Chart::Radar 3"
.TH Excel::Writer::XLSX::Chart::Radar 3 "2019-04-07" "perl v5.26.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Radar \- A class for writing Excel Radar charts.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
To create a simple Excel file with a Radar chart using Excel::Writer::XLSX:
.PP
.Vb 1
\&    #!/usr/bin/perl
\&
\&    use strict;
\&    use warnings;
\&    use Excel::Writer::XLSX;
\&
\&    my $workbook  = Excel::Writer::XLSX\->new( \*(Aqchart.xlsx\*(Aq );
\&    my $worksheet = $workbook\->add_worksheet();
\&
\&    my $chart     = $workbook\->add_chart( type => \*(Aqradar\*(Aq );
\&
\&    # Configure the chart.
\&    $chart\->add_series(
\&        categories => \*(Aq=Sheet1!$A$2:$A$7\*(Aq,
\&        values     => \*(Aq=Sheet1!$B$2:$B$7\*(Aq,
\&    );
\&
\&    # Add the worksheet data the chart refers to.
\&    my $data = [
\&        [ \*(AqCategory\*(Aq, 2, 3, 4, 5, 6, 7 ],
\&        [ \*(AqValue\*(Aq,    1, 4, 5, 2, 1, 5 ],
\&    ];
\&
\&    $worksheet\->write( \*(AqA1\*(Aq, $data );
\&
\&    _\|_END_\|_
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module implements Radar charts for Excel::Writer::XLSX. The chart object is created via the Workbook \f(CW\*(C`add_chart()\*(C'\fR method:
.PP
.Vb 1
\&    my $chart = $workbook\->add_chart( type => \*(Aqradar\*(Aq );
.Ve
.PP
Once the object is created it can be configured via the following methods that are common to all chart classes:
.PP
.Vb 4
\&    $chart\->add_series();
\&    $chart\->set_x_axis();
\&    $chart\->set_y_axis();
\&    $chart\->set_title();
.Ve
.PP
These methods are explained in detail in Excel::Writer::XLSX::Chart. Class specific methods or settings, if any, are explained below.
.SH "Radar Chart Methods"
.IX Header "Radar Chart Methods"
The \f(CW\*(C`Radar\*(C'\fR chart module also supports the following sub-types:
.PP
.Vb 2
\&    with_markers
\&    filled
.Ve
.PP
These can be specified at creation time via the \f(CW\*(C`add_chart()\*(C'\fR Worksheet method:
.PP
.Vb 1
\&    my $chart = $workbook\->add_chart( type => \*(Aqradar\*(Aq, subtype => \*(Aqfilled\*(Aq );
.Ve
.SH "EXAMPLE"
.IX Header "EXAMPLE"
Here is a complete example that demonstrates most of the available features when creating a chart.
.PP
.Vb 1
\&    #!/usr/bin/perl
\&
\&    use strict;
\&    use warnings;
\&    use Excel::Writer::XLSX;
\&
\&    my $workbook  = Excel::Writer::XLSX\->new( \*(Aqchart_radar.xlsx\*(Aq );
\&    my $worksheet = $workbook\->add_worksheet();
\&    my $bold      = $workbook\->add_format( bold => 1 );
\&
\&    # Add the worksheet data that the charts will refer to.
\&    my $headings = [ \*(AqNumber\*(Aq, \*(AqBatch 1\*(Aq, \*(AqBatch 2\*(Aq ];
\&    my $data = [
\&        [ 2,  3,  4,  5,  6,  7 ],
\&        [ 30, 60, 70, 50, 40, 30 ],
\&        [ 25, 40, 50, 30, 50, 40 ],
\&
\&    ];
\&
\&    $worksheet\->write( \*(AqA1\*(Aq, $headings, $bold );
\&    $worksheet\->write( \*(AqA2\*(Aq, $data );
\&
\&    # Create a new chart object. In this case an embedded chart.
\&    my $chart = $workbook\->add_chart( type => \*(Aqradar\*(Aq, embedded => 1 );
\&
\&    # Configure the first series.
\&    $chart\->add_series(
\&        name       => \*(Aq=Sheet1!$B$1\*(Aq,
\&        categories => \*(Aq=Sheet1!$A$2:$A$7\*(Aq,
\&        values     => \*(Aq=Sheet1!$B$2:$B$7\*(Aq,
\&    );
\&
\&    # Configure second series. Note alternative use of array ref to define
\&    # ranges: [ $sheetname, $row_start, $row_end, $col_start, $col_end ].
\&    $chart\->add_series(
\&        name       => \*(Aq=Sheet1!$C$1\*(Aq,
\&        categories => [ \*(AqSheet1\*(Aq, 1, 6, 0, 0 ],
\&        values     => [ \*(AqSheet1\*(Aq, 1, 6, 2, 2 ],
\&    );
\&
\&    # Add a chart title and some axis labels.
\&    $chart\->set_title ( name => \*(AqResults of sample analysis\*(Aq );
\&    $chart\->set_x_axis( name => \*(AqTest number\*(Aq );
\&    $chart\->set_y_axis( name => \*(AqSample length (mm)\*(Aq );
\&
\&    # Set an Excel chart style. Colors with white outline and shadow.
\&    $chart\->set_style( 10 );
\&
\&    # Insert the chart into the worksheet (with an offset).
\&    $worksheet\->insert_chart( \*(AqD2\*(Aq, $chart, 25, 10 );
\&
\&    _\|_END_\|_
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
John McNamara jmcnamara@cpan.org
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright MM-MMXIX, John McNamara.
.PP
All Rights Reserved. This module is free software. It may be used, redistributed and/or modified under the same terms as Perl itself.
